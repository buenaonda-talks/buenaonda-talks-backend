version: 2.1

orbs:
  docker: circleci/docker@2.1

commands:
  docker_prepare:
    description: "Prepare Docker image name and login"
    steps:
      - run:
          name: Prepare Docker Image Name
          command: |
            echo "export IMAGE_NAME=$DOCKERHUB_USERNAME/$DOCKER_REPOSITORY:$CIRCLE_SHA1" >> $BASH_ENV
      - run:
          name: Docker Login
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin

jobs:
  build_and_push:
    executor: docker/docker
    steps:
      - checkout
      - setup_remote_docker
      - docker_prepare
      - run:
          name: Build and Push Docker Image
          command: |
            echo 'Pulling latest image for caching...'
            docker pull $DOCKERHUB_USERNAME/$DOCKER_REPOSITORY:latest || true
            echo 'Building Docker image...'
            docker build --cache-from $DOCKERHUB_USERNAME/$DOCKER_REPOSITORY:latest -t $IMAGE_NAME .
            docker push $IMAGE_NAME
            echo 'Docker image pushed to Docker Hub.'
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - IMAGE_NAME.txt

  deploy:
    executor: docker/docker
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load IMAGE_NAME from Workspace
          command: |
            echo "export IMAGE_NAME=$(cat /tmp/workspace/IMAGE_NAME.txt)" >> $BASH_ENV
      - add_ssh_keys
      - run:
          name: Add SSH Key to Known Hosts
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      - run:
          name: Docker Login
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - run:
          name: Deploy to DigitalOcean
          command: |
            CONTAINER_NAME="buenaonda-talks-backend-${CIRCLE_BRANCH}"
            PORT=$(if [ "$CIRCLE_BRANCH" == "main" ]; then echo "8787"; else echo "8788"; fi)
            ssh $SSH_USER@$SSH_HOST "\
            echo 'Pulling Docker image...' && \
            docker pull $IMAGE_NAME && \
            echo 'Stopping and removing previous container...' && \
            docker stop $CONTAINER_NAME || true && \
            docker rm $CONTAINER_NAME || true && \
            echo 'Starting new container...' && \
            docker run -d --name $CONTAINER_NAME -p $PORT:3000 $IMAGE_NAME || \
            echo 'Deployment failed.' && exit 1; \
            echo 'Deployment successful.' && exit 0"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_and_push:
          context: dockerhub-credentials
      - deploy:
          requires:
            - build_and_push
          context: deployment-settings
