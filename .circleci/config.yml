version: 2.1

orbs:
  docker: circleci/docker@2.5.0

commands:
  docker_prepare:
    description: "Prepare Docker image name and login"
    steps:
      - run:
          name: Prepare Docker Image Name
          command: |
            echo "export IMAGE_NAME=$DOCKERHUB_USERNAME/$DOCKER_REPOSITORY:$CIRCLE_SHA1" >> $BASH_ENV
            echo "export LATEST_IMAGE_NAME=$DOCKERHUB_USERNAME/$DOCKER_REPOSITORY:latest" >> $BASH_ENV
      - run:
          name: Docker Login
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin

jobs:
  build_and_push:
    executor: docker/docker
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - docker_prepare
      - run:
          name: Create Workspace Directory
          command: mkdir -p /tmp/workspace
      - run:
          name: Write IMAGE_NAME to file
          command: |
            echo $IMAGE_NAME > /tmp/workspace/IMAGE_NAME.txt
      - run:
          name: Build and Push Docker Image
          command: |
            echo 'Pulling latest image for caching...'
            docker pull $DOCKERHUB_USERNAME/$DOCKER_REPOSITORY:latest || true
            echo 'Building Docker image...'
            docker build --cache-from $DOCKERHUB_USERNAME/$DOCKER_REPOSITORY:latest -t $IMAGE_NAME .
            echo 'Tagging Docker image with latest tag...'
            docker tag $IMAGE_NAME $LATEST_IMAGE_NAME
            echo 'Pushing Docker image with SHA tag...'
            docker push $IMAGE_NAME
            echo 'Pushing Docker image with latest tag...'
            docker push $LATEST_IMAGE_NAME
            echo 'Docker image pushed to Docker Hub.'
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - IMAGE_NAME.txt

  deploy:
    executor: docker/docker
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load IMAGE_NAME from Workspace
          command: |
            echo "export IMAGE_NAME=$(cat /tmp/workspace/IMAGE_NAME.txt)" >> $BASH_ENV
      - add_ssh_keys
      - run:
          name: Add SSH Key to Known Hosts
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      - run:
          name: Docker Login
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - run:
          name: Deploy to DigitalOcean
          command: |
            ssh $SSH_USER@$SSH_HOST "
              export IMAGE_NAME=$IMAGE_NAME;

              set -e;
              CONTAINER_NAME='buenaonda-talks-backend-${CIRCLE_BRANCH}';
              DEPLOY_DIR='/var/www/buenaondatalks/${CIRCLE_BRANCH}';
              
              # Ensure deployment directory exists and has latest docker-compose.yml
              mkdir -p \$DEPLOY_DIR;
              cd \$DEPLOY_DIR;
              
              # Here you could transfer your docker-compose.yml and any other needed files
              # For example, using 'scp' or by cloning from a repository

              # Pull latest image version
              echo 'Pulling Docker image...';
              docker pull $IMAGE_NAME;

              # Start or update services with minimal downtime
              echo 'Starting or updating services...';
              docker compose -f docker-compose.yml up -d --force-recreate;

              # Cleanup: pruning unused images/volumes
              echo 'Cleaning up...';
              docker image prune -af;

              echo 'Deployment successful.';
            "

workflows:
  build_and_deploy:
    jobs:
      - build_and_push:
          context: dockerhub-credentials
          filters:
            branches:
              only:
                - main
                - staging
      - deploy:
          requires:
            - build_and_push
          context: deployment-settings
          filters:
            branches:
              only:
                - main
                - staging
